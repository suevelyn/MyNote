apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-hc-dep
  namespace: demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis-hc-dep
  template:
    metadata:
      labels:
        app: redis-hc-dep
    spec:
      containers:
      - image: evelynsu/k8sredis:latest
        name: k8sredis
        ports:
        - containerPort: 80
          protocol: TCP
        volumeMounts:
          - mountPath: /app/appsettings.json
            name: data
            readOnly: true
            subPath: appsettings.json
          - mountPath: /app/appsettings.Development.json
            name: data
            readOnly: true
            subPath: appsettings.Development.json  
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits:
            cpu: 500m
            memory: 2500Mi
      volumes:
      - name: data
        configMap:
          name: redis-appsettings
------
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-appsettings
  namespace: demo
data:
  appsettings.Development.json: |
    {
      "Logging": {
       "LogLevel": {
         "Default": "Information",
         "Microsoft": "Warning",
         "Microsoft.Hosting.Lifetime": "Information"
        }
      }
    }
 
  appsettings.json: |
    {
      "Logging": {
        "LogLevel": {
          "Default": "Warning"
        }
      },
      "AllowedHosts": "*",
      "RedisConnection": "10.36.1.123:6379,password=3Ns8EphP,defaultdatabase=0"
    }
    
----
apiVersion: v1
kind: Service
metadata:
  name: redis-svc
  namespace: demo
spec:
  selector:
    app: redis-hc-dep
  type: NodePort
  ports:
    - protocol: TCP
      port: 3001
      targetPort: 80
      nodePort: 30390
